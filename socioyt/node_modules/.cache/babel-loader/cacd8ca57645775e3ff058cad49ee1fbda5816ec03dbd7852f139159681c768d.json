{"ast":null,"code":"import { isStaging } from \"./chunk-3TMSNP4L.mjs\";\nimport { CURRENT_DEV_INSTANCE_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from \"./chunk-I6MTSTOF.mjs\";\n\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && isStaging(frontendApi)) {\n    return \"canary\";\n  }\n  if (!version) {\n    return \"latest\";\n  }\n  return version.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, {\n  clerkJSVersion\n}) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map(string_ => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter(url2 => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nvar ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nvar isAbsoluteUrl = url => ABSOLUTE_URL_REGEX.test(url);\nexport { parseSearchParams, stripScheme, addClerkPrefix, getClerkJsMajorVersionOrTag, getScriptUrl, isLegacyDevAccountPortalOrigin, isCurrentDevAccountPortalOrigin, hasTrailingSlash, withTrailingSlash, withoutTrailingSlash, hasLeadingSlash, withoutLeadingSlash, withLeadingSlash, cleanDoubleSlashes, isNonEmptyURL, joinURL, isAbsoluteUrl };","map":{"version":3,"names":["parseSearchParams","queryString","startsWith","slice","URLSearchParams","stripScheme","url","replace","addClerkPrefix","str","regex","match","stripped","getClerkJsMajorVersionOrTag","frontendApi","version","isStaging","split","getScriptUrl","clerkJSVersion","noSchemeFrontendApi","major","isLegacyDevAccountPortalOrigin","host","LEGACY_DEV_INSTANCE_SUFFIXES","some","legacyDevSuffix","endsWith","isCurrentDevAccountPortalOrigin","CURRENT_DEV_INSTANCE_SUFFIXES","currentDevSuffix","TRAILING_SLASH_RE","hasTrailingSlash","input","respectQueryAndFragment","test","withTrailingSlash","path","fragment","fragmentIndex","indexOf","s0","s","length","join","withoutTrailingSlash","hasLeadingSlash","withoutLeadingSlash","withLeadingSlash","cleanDoubleSlashes","map","string_","isNonEmptyURL","JOIN_LEADING_SLASH_RE","joinURL","base","segment","filter","url2","_segment","ABSOLUTE_URL_REGEX","isAbsoluteUrl"],"sources":["/home/usl-sz-0158/Downloads/assessment/socioyt/node_modules/@clerk/shared/src/url.ts"],"sourcesContent":["import { CURRENT_DEV_INSTANCE_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isStaging } from './utils/instance';\n\nexport function parseSearchParams(queryString = ''): URLSearchParams {\n  if (queryString.startsWith('?')) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\n\nexport function stripScheme(url = ''): string {\n  return (url || '').replace(/^.+:\\/\\//, '');\n}\n\nexport function addClerkPrefix(str: string | undefined) {\n  if (!str) {\n    return '';\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n\n  const stripped = str.replace(regex, '');\n  return `clerk.${stripped}`;\n}\n\n/**\n *\n * Retrieve the clerk-js major tag using the major version from the pkgVersion\n * param or use the frontendApi to determine if the canary tag should be used.\n * The default tag is `latest`.\n */\nexport const getClerkJsMajorVersionOrTag = (frontendApi: string, version?: string) => {\n  if (!version && isStaging(frontendApi)) {\n    return 'canary';\n  }\n\n  if (!version) {\n    return 'latest';\n  }\n\n  return version.split('.')[0] || 'latest';\n};\n\n/**\n *\n * Retrieve the clerk-js script url from the frontendApi and the major tag\n * using the {@link getClerkJsMajorVersionOrTag} or a provided clerkJSVersion tag.\n */\nexport const getScriptUrl = (frontendApi: string, { clerkJSVersion }: { clerkJSVersion?: string }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, '');\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\n\n// Returns true for hosts such as:\n// * accounts.foo.bar-13.lcl.dev\n// * accounts.foo.bar-13.lclstage.dev\n// * accounts.foo.bar-13.dev.lclclerk.com\nexport function isLegacyDevAccountPortalOrigin(host: string): boolean {\n  return LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith('accounts.') && host.endsWith(legacyDevSuffix);\n  });\n}\n\n// Returns true for hosts such as:\n// * foo-bar-13.accounts.dev\n// * foo-bar-13.accountsstage.dev\n// * foo-bar-13.accounts.lclclerk.com\n// But false for:\n// * foo-bar-13.clerk.accounts.lclclerk.com\nexport function isCurrentDevAccountPortalOrigin(host: string): boolean {\n  return CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith('.clerk' + currentDevSuffix);\n  });\n}\n\n/* Functions below are taken from https://github.com/unjs/ufo/blob/main/src/utils.ts. LICENSE: MIT */\n\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\n\nexport function hasTrailingSlash(input = '', respectQueryAndFragment?: boolean): boolean {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/');\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\n\nexport function withTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/') ? input : input + '/';\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split('?');\n  return s0 + '/' + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function withoutTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || '/';\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split('?');\n  return (s0.slice(0, -1) || '/') + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function hasLeadingSlash(input = ''): boolean {\n  return input.startsWith('/');\n}\n\nexport function withoutLeadingSlash(input = ''): string {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || '/';\n}\n\nexport function withLeadingSlash(input = ''): string {\n  return hasLeadingSlash(input) ? input : '/' + input;\n}\n\nexport function cleanDoubleSlashes(input = ''): string {\n  return input\n    .split('://')\n    .map(string_ => string_.replace(/\\/{2,}/g, '/'))\n    .join('://');\n}\n\nexport function isNonEmptyURL(url: string) {\n  return url && url !== '/';\n}\n\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\n\nexport function joinURL(base: string, ...input: string[]): string {\n  let url = base || '';\n\n  for (const segment of input.filter(url => isNonEmptyURL(url))) {\n    if (url) {\n      // TODO: Handle .. when joining\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, '');\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n\n  return url;\n}\n\n/* Code below is taken from https://github.com/vercel/next.js/blob/fe7ff3f468d7651a92865350bfd0f16ceba27db5/packages/next/src/shared/lib/utils.ts. LICENSE: MIT */\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url);\n"],"mappings":";;;;AAGO,SAASA,kBAAkBC,WAAA,GAAc,IAAqB;EACnE,IAAIA,WAAA,CAAYC,UAAA,CAAW,GAAG,GAAG;IAC/BD,WAAA,GAAcA,WAAA,CAAYE,KAAA,CAAM,CAAC;EACnC;EACA,OAAO,IAAIC,eAAA,CAAgBH,WAAW;AACxC;AAEO,SAASI,YAAYC,GAAA,GAAM,IAAY;EAC5C,QAAQA,GAAA,IAAO,IAAIC,OAAA,CAAQ,YAAY,EAAE;AAC3C;AAEO,SAASC,eAAeC,GAAA,EAAyB;EACtD,IAAI,CAACA,GAAA,EAAK;IACR,OAAO;EACT;EACA,IAAIC,KAAA;EACJ,IAAID,GAAA,CAAIE,KAAA,CAAM,iBAAiB,GAAG;IAChCD,KAAA,GAAQ;EACV,WAAWD,GAAA,CAAIE,KAAA,CAAM,kBAAkB,GAAG;IACxC,OAAOF,GAAA;EACT,OAAO;IACLC,KAAA,GAAQ;EACV;EAEA,MAAME,QAAA,GAAWH,GAAA,CAAIF,OAAA,CAAQG,KAAA,EAAO,EAAE;EACtC,OAAO,SAASE,QAAQ;AAC1B;AAQO,IAAMC,2BAAA,GAA8BA,CAACC,WAAA,EAAqBC,OAAA,KAAqB;EACpF,IAAI,CAACA,OAAA,IAAWC,SAAA,CAAUF,WAAW,GAAG;IACtC,OAAO;EACT;EAEA,IAAI,CAACC,OAAA,EAAS;IACZ,OAAO;EACT;EAEA,OAAOA,OAAA,CAAQE,KAAA,CAAM,GAAG,EAAE,CAAC,KAAK;AAClC;AAOO,IAAMC,YAAA,GAAeA,CAACJ,WAAA,EAAqB;EAAEK;AAAe,MAAmC;EACpG,MAAMC,mBAAA,GAAsBN,WAAA,CAAYP,OAAA,CAAQ,iBAAiB,EAAE;EACnE,MAAMc,KAAA,GAAQR,2BAAA,CAA4BC,WAAA,EAAaK,cAAc;EACrE,OAAO,WAAWC,mBAAmB,wBAAwBD,cAAA,IAAkBE,KAAK;AACtF;AAMO,SAASC,+BAA+BC,IAAA,EAAuB;EACpE,OAAOC,4BAAA,CAA6BC,IAAA,CAAKC,eAAA,IAAmB;IAC1D,OAAOH,IAAA,CAAKrB,UAAA,CAAW,WAAW,KAAKqB,IAAA,CAAKI,QAAA,CAASD,eAAe;EACtE,CAAC;AACH;AAQO,SAASE,gCAAgCL,IAAA,EAAuB;EACrE,OAAOM,6BAAA,CAA8BJ,IAAA,CAAKK,gBAAA,IAAoB;IAC5D,OAAOP,IAAA,CAAKI,QAAA,CAASG,gBAAgB,KAAK,CAACP,IAAA,CAAKI,QAAA,CAAS,WAAWG,gBAAgB;EACtF,CAAC;AACH;AAIA,IAAMC,iBAAA,GAAoB;AAEnB,SAASC,iBAAiBC,KAAA,GAAQ,IAAIC,uBAAA,EAA4C;EACvF,IAAI,CAACA,uBAAA,EAAyB;IAC5B,OAAOD,KAAA,CAAMN,QAAA,CAAS,GAAG;EAC3B;EACA,OAAOI,iBAAA,CAAkBI,IAAA,CAAKF,KAAK;AACrC;AAEO,SAASG,kBAAkBH,KAAA,GAAQ,IAAIC,uBAAA,EAA2C;EACvF,IAAI,CAACA,uBAAA,EAAyB;IAC5B,OAAOD,KAAA,CAAMN,QAAA,CAAS,GAAG,IAAIM,KAAA,GAAQA,KAAA,GAAQ;EAC/C;EACA,IAAID,gBAAA,CAAiBC,KAAA,EAAO,IAAI,GAAG;IACjC,OAAOA,KAAA,IAAS;EAClB;EACA,IAAII,IAAA,GAAOJ,KAAA;EACX,IAAIK,QAAA,GAAW;EACf,MAAMC,aAAA,GAAgBN,KAAA,CAAMO,OAAA,CAAQ,GAAG;EACvC,IAAID,aAAA,IAAiB,GAAG;IACtBF,IAAA,GAAOJ,KAAA,CAAM9B,KAAA,CAAM,GAAGoC,aAAa;IACnCD,QAAA,GAAWL,KAAA,CAAM9B,KAAA,CAAMoC,aAAa;IACpC,IAAI,CAACF,IAAA,EAAM;MACT,OAAOC,QAAA;IACT;EACF;EACA,MAAM,CAACG,EAAA,EAAI,GAAGC,CAAC,IAAIL,IAAA,CAAKpB,KAAA,CAAM,GAAG;EACjC,OAAOwB,EAAA,GAAK,OAAOC,CAAA,CAAEC,MAAA,GAAS,IAAI,IAAID,CAAA,CAAEE,IAAA,CAAK,GAAG,CAAC,KAAK,MAAMN,QAAA;AAC9D;AAEO,SAASO,qBAAqBZ,KAAA,GAAQ,IAAIC,uBAAA,EAA2C;EAC1F,IAAI,CAACA,uBAAA,EAAyB;IAC5B,QAAQF,gBAAA,CAAiBC,KAAK,IAAIA,KAAA,CAAM9B,KAAA,CAAM,GAAG,EAAE,IAAI8B,KAAA,KAAU;EACnE;EACA,IAAI,CAACD,gBAAA,CAAiBC,KAAA,EAAO,IAAI,GAAG;IAClC,OAAOA,KAAA,IAAS;EAClB;EACA,IAAII,IAAA,GAAOJ,KAAA;EACX,IAAIK,QAAA,GAAW;EACf,MAAMC,aAAA,GAAgBN,KAAA,CAAMO,OAAA,CAAQ,GAAG;EACvC,IAAID,aAAA,IAAiB,GAAG;IACtBF,IAAA,GAAOJ,KAAA,CAAM9B,KAAA,CAAM,GAAGoC,aAAa;IACnCD,QAAA,GAAWL,KAAA,CAAM9B,KAAA,CAAMoC,aAAa;EACtC;EACA,MAAM,CAACE,EAAA,EAAI,GAAGC,CAAC,IAAIL,IAAA,CAAKpB,KAAA,CAAM,GAAG;EACjC,QAAQwB,EAAA,CAAGtC,KAAA,CAAM,GAAG,EAAE,KAAK,QAAQuC,CAAA,CAAEC,MAAA,GAAS,IAAI,IAAID,CAAA,CAAEE,IAAA,CAAK,GAAG,CAAC,KAAK,MAAMN,QAAA;AAC9E;AAEO,SAASQ,gBAAgBb,KAAA,GAAQ,IAAa;EACnD,OAAOA,KAAA,CAAM/B,UAAA,CAAW,GAAG;AAC7B;AAEO,SAAS6C,oBAAoBd,KAAA,GAAQ,IAAY;EACtD,QAAQa,eAAA,CAAgBb,KAAK,IAAIA,KAAA,CAAM9B,KAAA,CAAM,CAAC,IAAI8B,KAAA,KAAU;AAC9D;AAEO,SAASe,iBAAiBf,KAAA,GAAQ,IAAY;EACnD,OAAOa,eAAA,CAAgBb,KAAK,IAAIA,KAAA,GAAQ,MAAMA,KAAA;AAChD;AAEO,SAASgB,mBAAmBhB,KAAA,GAAQ,IAAY;EACrD,OAAOA,KAAA,CACJhB,KAAA,CAAM,KAAK,EACXiC,GAAA,CAAIC,OAAA,IAAWA,OAAA,CAAQ5C,OAAA,CAAQ,WAAW,GAAG,CAAC,EAC9CqC,IAAA,CAAK,KAAK;AACf;AAEO,SAASQ,cAAc9C,GAAA,EAAa;EACzC,OAAOA,GAAA,IAAOA,GAAA,KAAQ;AACxB;AAEA,IAAM+C,qBAAA,GAAwB;AAEvB,SAASC,QAAQC,IAAA,KAAiBtB,KAAA,EAAyB;EAChE,IAAI3B,GAAA,GAAMiD,IAAA,IAAQ;EAElB,WAAWC,OAAA,IAAWvB,KAAA,CAAMwB,MAAA,CAAOC,IAAA,IAAON,aAAA,CAAcM,IAAG,CAAC,GAAG;IAC7D,IAAIpD,GAAA,EAAK;MAEP,MAAMqD,QAAA,GAAWH,OAAA,CAAQjD,OAAA,CAAQ8C,qBAAA,EAAuB,EAAE;MAC1D/C,GAAA,GAAM8B,iBAAA,CAAkB9B,GAAG,IAAIqD,QAAA;IACjC,OAAO;MACLrD,GAAA,GAAMkD,OAAA;IACR;EACF;EAEA,OAAOlD,GAAA;AACT;AAMA,IAAMsD,kBAAA,GAAqB;AACpB,IAAMC,aAAA,GAAiBvD,GAAA,IAAgBsD,kBAAA,CAAmBzB,IAAA,CAAK7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}