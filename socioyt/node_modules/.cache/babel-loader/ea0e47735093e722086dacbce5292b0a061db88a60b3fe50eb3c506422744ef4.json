{"ast":null,"code":"import { i as isWindowDefined, a as isFunction, m as mergeObjects, S as SWRConfigContext, d as defaultConfig, s as serialize, b as SWRGlobalState, c as cache, e as isUndefined, f as mergeConfigs } from './config-context-client-x_C9_NWC.mjs';\nexport { I as IS_REACT_LEGACY, t as IS_SERVER, O as OBJECT, g as SWRConfig, U as UNDEFINED, l as compare, z as createCacheHelper, r as defaultConfigOptions, p as getTimestamp, y as hasRequestAnimationFrame, j as initCache, o as internalMutate, x as isDocumentDefined, B as isPromiseLike, k as mutate, A as noop, q as preset, u as rAF, h as revalidateEvents, w as slowConnection, n as stableHash, v as useIsomorphicLayoutEffect } from './config-context-client-x_C9_NWC.mjs';\nimport React, { useContext } from 'react';\nconst INFINITE_PREFIX = '$inf$';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = () => {\n  if (enableDevtools) {\n    // @ts-expect-error\n    window.__SWR_DEVTOOLS_REACT__ = React;\n  }\n};\nconst normalize = args => {\n  return isFunction(args[1]) ? [args[0], args[1], args[2] || {}] : [args[0], null, (args[1] === null ? args[2] : args[1]) || {}];\n};\nconst useSWRConfig = () => {\n  return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\nconst preload = (key_, fetcher) => {\n  const [key, fnArg] = serialize(key_);\n  const [,,, PRELOAD] = SWRGlobalState.get(cache);\n  // Prevent preload to be called multiple times before used.\n  if (PRELOAD[key]) return PRELOAD[key];\n  const req = fetcher(fnArg);\n  PRELOAD[key] = req;\n  return req;\n};\nconst middleware = useSWRNext => (key_, fetcher_, config) => {\n  // fetcher might be a sync function, so this should not be an async function\n  const fetcher = fetcher_ && ((...args) => {\n    const [key] = serialize(key_);\n    const [,,, PRELOAD] = SWRGlobalState.get(cache);\n    if (key.startsWith(INFINITE_PREFIX)) {\n      // we want the infinite fetcher to be called.\n      // handling of the PRELOAD cache happens there.\n      return fetcher_(...args);\n    }\n    const req = PRELOAD[key];\n    if (isUndefined(req)) return fetcher_(...args);\n    delete PRELOAD[key];\n    return req;\n  });\n  return useSWRNext(key_, fetcher, config);\n};\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = hook => {\n  return function useSWRArgs(...args) {\n    // Get the default and inherited configuration.\n    const fallbackConfig = useSWRConfig();\n    // Normalize arguments.\n    const [key, fn, _config] = normalize(args);\n    // Merge configurations.\n    const config = mergeConfigs(fallbackConfig, _config);\n    // Apply middleware\n    let next = hook;\n    const {\n      use\n    } = config;\n    const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n    for (let i = middleware.length; i--;) {\n      next = middleware[i](next);\n    }\n    return next(key, fn || config.fetcher || null, config);\n  };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback) => {\n  const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n  keyedRevalidators.push(callback);\n  return () => {\n    const index = keyedRevalidators.indexOf(callback);\n    if (index >= 0) {\n      // O(1): faster than splice\n      keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n      keyedRevalidators.pop();\n    }\n  };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware) => {\n  return (...args) => {\n    const [key, fn, config] = normalize(args);\n    const uses = (config.use || []).concat(middleware);\n    return useSWR(key, fn, {\n      ...config,\n      use: uses\n    });\n  };\n};\nsetupDevTools();\nexport { INFINITE_PREFIX, SWRGlobalState, cache, defaultConfig, isFunction, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, normalize, preload, serialize, subscribeCallback, useSWRConfig, withArgs, withMiddleware };","map":{"version":3,"names":["i","isWindowDefined","a","isFunction","m","mergeObjects","S","SWRConfigContext","d","defaultConfig","s","serialize","b","SWRGlobalState","c","cache","e","isUndefined","f","mergeConfigs","I","IS_REACT_LEGACY","t","IS_SERVER","O","OBJECT","g","SWRConfig","U","UNDEFINED","l","compare","z","createCacheHelper","r","defaultConfigOptions","p","getTimestamp","y","hasRequestAnimationFrame","j","initCache","o","internalMutate","x","isDocumentDefined","B","isPromiseLike","k","mutate","A","noop","q","preset","u","rAF","h","revalidateEvents","w","slowConnection","n","stableHash","v","useIsomorphicLayoutEffect","React","useContext","INFINITE_PREFIX","enableDevtools","window","__SWR_DEVTOOLS_USE__","use","setupDevTools","__SWR_DEVTOOLS_REACT__","normalize","args","useSWRConfig","preload","key_","fetcher","key","fnArg","PRELOAD","get","req","middleware","useSWRNext","fetcher_","config","startsWith","BUILT_IN_MIDDLEWARE","concat","withArgs","hook","useSWRArgs","fallbackConfig","fn","_config","next","length","subscribeCallback","callbacks","callback","keyedRevalidators","push","index","indexOf","pop","withMiddleware","useSWR","uses"],"sources":["/home/usl-sz-0158/Downloads/assessment/socioyt/node_modules/swr/dist/_internal/index.mjs"],"sourcesContent":["import { i as isWindowDefined, a as isFunction, m as mergeObjects, S as SWRConfigContext, d as defaultConfig, s as serialize, b as SWRGlobalState, c as cache, e as isUndefined, f as mergeConfigs } from './config-context-client-x_C9_NWC.mjs';\nexport { I as IS_REACT_LEGACY, t as IS_SERVER, O as OBJECT, g as SWRConfig, U as UNDEFINED, l as compare, z as createCacheHelper, r as defaultConfigOptions, p as getTimestamp, y as hasRequestAnimationFrame, j as initCache, o as internalMutate, x as isDocumentDefined, B as isPromiseLike, k as mutate, A as noop, q as preset, u as rAF, h as revalidateEvents, w as slowConnection, n as stableHash, v as useIsomorphicLayoutEffect } from './config-context-client-x_C9_NWC.mjs';\nimport React, { useContext } from 'react';\n\nconst INFINITE_PREFIX = '$inf$';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = React;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\nexport { INFINITE_PREFIX, SWRGlobalState, cache, defaultConfig, isFunction, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, normalize, preload, serialize, subscribeCallback, useSWRConfig, withArgs, withMiddleware };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}